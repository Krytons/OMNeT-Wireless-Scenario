[General]
network = NetworkModified

# Configurator settings
#*.configurator.dumpAddresses = true
#*.configurator.dumpTopology = true
#*.configurator.dumpLinks = true
#*.configurator.dumpRoutes = true

#Total of 20 nodes: this will grant at least 4 hop distance from sender to receiver 
**.number = 3
**.networkConfiguratorModule = "networkConfigurator"
**.networkConfigurator.config = xmldoc("hierarchical99.xml")
#**.configurator.config = xmldoc("hierarchical99.xml") #Add xml file
**.host[*].hasIpv4 = false #Required in order to use NextHopNetworkLayer
**.host[*].hasIpv6 = false
**.host[*].hasGn = true
**.host[*].generic.typename = "NextHopNetworkLayer" #Required
#**.networkConfigurator.typename = "NextHopNetworkConfigurator" #Add Next Hop Configurator
**.host[*].generic.nextHop.hopLimit = 4  #Required

#Settings for the application to use
**.numApps = 1 #Max application number for each sending node

#Propagation model
**.radioMedium.pathLoss.typename = "LogNormalShadowing" #This will introduce multiPath uncertainty
#If values are really bad, arp request, is going to fail
**.radioMedium.pathLoss.alpha = 3 #Reduce factor
**.radioMedium.pathLoss.sigma = 7 #Variance factor

#Impostazioni di mobilita'
**.host[*].mobility.typename = "StationaryMobility"
**.host[*].mobility.initFromDisplayString = false
**.host[*].mobility.initialZ = 0m 

**.host[0].mobility.initialX = 100m 
**.host[0].mobility.initialY = 100m 

**.host[1].mobility.initialX = 200m 
**.host[1].mobility.initialY = 100m 

**.host[2].mobility.initialX = 100m 
**.host[2].mobility.initialY = 200m 

**.constraintAreaMaxX = 500m
**.constraintAreaMaxY = 500m
**.constraintAreaMaxZ = 0m
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m

# ping app (host[0] pinged by others)
#**.host[*].app[*].typename = "PingApp"
#**.host[0].app[0].startTime = uniform(1s,5s)
#**.host[0].app[0].printPing = true
#**.host[0].app[0].destAddr = "host[1] host[2]"
#**.host[*].forwarding = true



#Host 0 riceve
**.host[0].app[0].typename = "UdpSink"
**.host[0].app[0].localPort = 7654
#Host 1 forwarding
**.host[1].app[0].typename = "UdpSink"
**.host[1].app[0].localPort = 7654
#Host 2 invia
**.host[2].app[0].typename = "UdpBasicApp"
**.host[2].app[0].destPort = 7654
**.host[2].app[0].destAddresses = "host[0]" #Default (modulepath)
**.host[2].app[0].messageLength = 100B
**.host[2].app[0].startTime = uniform(0s, 10ms) #Non trasmettiamo mai allo stesso istante, sfalziamo lo start time obbligatoriamente
**.host[2].app[0].sendInterval = 20ms
**.host[2].app[0].packetName = "CustomData"

#Routing Setting
#*.host[*].multicastForwarding = false
#*.host[*].forwarding = true




[Config Wireless]
description = Delirium time!
**.networkConfigurator.typename = "NextHopNetworkConfigurator"
#Add some fancy effects to our wireless network
*.host[*].wlan[2].radio.displayCommunicationRange = true
*.visualizer.sceneVisualizer.descriptionFigure = "title"
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.physicalLinkVisualizer.packetFilter = "CustomData"

#Some communication range
*.host[*].wlan[0].radio.transmitter.communicationRange = 500m
*.host[*].wlan[0].radio.displayCommunicationRange = true



[Config Static]
description = Add static routing!
extends = Wireless
#Adding some static routing via XML file
**.host[*].forwarding = true
*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
**.routingTable.netmaskRoutes = ""

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.*LinkVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.packetFilter = "CustomData"

