[General]
network = NetworkModified

# Configurator settings
#*.configurator.dumpAddresses = true
#*.configurator.dumpTopology = true
#*.configurator.dumpLinks = true
#*.configurator.dumpRoutes = true

#Total of 20 nodes: this will grant at least 4 hop distance from sender to receiver 
**.number = 20
**.networkConfiguratorModule = "networkConfigurator"
**.networkConfigurator.config = xmldoc("lessnodes.xml")

**.host[*].hasIpv4 = false #Required in order to use NextHopNetworkLayer
**.host[*].hasIpv6 = false
**.host[*].hasGn = true
**.host[*].generic.typename = "NextHopNetworkLayer" #Required
#**.networkConfigurator.typename = "NextHopNetworkConfigurator" #Add Next Hop Configurator
**.host[*].generic.nextHop.hopLimit = 4  #Required

#Settings for the application to use
**.numApps = 1 #Max application number for each sending node

#Propagation model
**.radioMedium.pathLoss.typename = "LogNormalShadowing" #This will introduce multiPath uncertainty
#If values are really bad, arp request, is going to fail
**.radioMedium.pathLoss.alpha = 3 #Reduce factor
**.radioMedium.pathLoss.sigma = 7 #Variance factor


# ping app (host[0] pinged by others)
#**.host[*].app[*].typename = "PingApp"
#**.host[0].app[0].startTime = uniform(1s,5s)
#**.host[0].app[0].printPing = true
#**.host[0].app[0].destAddr = "host[1] host[2]"
#**.host[*].forwarding = true




#Host 4 riceve
**.host[4..19].app[0].typename = "UdpSink"
**.host[4..19].app[0].localPort = 7654
#Host 0 invia
**.host[0..3].app[0].typename = "UdpBasicApp"
**.host[0..3].app[0].destPort = 7654
**.host[0].app[0].destAddresses = "host[16]" #Default (modulepath)
**.host[1].app[0].destAddresses = "host[17]" 
**.host[2].app[0].destAddresses = "host[18]" 
**.host[3].app[0].destAddresses = "host[19]" 
**.host[0..3].app[0].messageLength = 100B
**.host[0..3].app[0].startTime = uniform(0s, 10ms) #Non trasmettiamo mai allo stesso istante, sfalziamo lo start time obbligatoriamente
**.host[0..3].app[0].sendInterval = 20ms
**.host[0..3].app[0].packetName = "UDP_Data"


#Routing Setting
#Senders
**.host[0].generic.nextHop.nextHopParam = "host[4]"
**.host[1].generic.nextHop.nextHopParam = "host[7]"
**.host[2].generic.nextHop.nextHopParam = "host[10]"
**.host[3].generic.nextHop.nextHopParam = "host[13]"
 

#Forwarders
**.host[4].generic.nextHop.nextHopParam = "host[5]"
**.host[5].generic.nextHop.nextHopParam = "host[6]"
**.host[6].generic.nextHop.nextHopParam = "host[16]"

**.host[7].generic.nextHop.nextHopParam = "host[8]"
**.host[8].generic.nextHop.nextHopParam = "host[9]"
**.host[9].generic.nextHop.nextHopParam = "host[17]"

**.host[10].generic.nextHop.nextHopParam = "host[11]"
**.host[11].generic.nextHop.nextHopParam = "host[12]"
**.host[12].generic.nextHop.nextHopParam = "host[18]"

**.host[13].generic.nextHop.nextHopParam = "host[14]"
**.host[14].generic.nextHop.nextHopParam = "host[15]"
**.host[15].generic.nextHop.nextHopParam = "host[19]"


#Receivers
**.host[16].generic.nextHop.nextHopParam = "host[16]"
**.host[17].generic.nextHop.nextHopParam = "host[17]"
**.host[18].generic.nextHop.nextHopParam = "host[18]"
**.host[19].generic.nextHop.nextHopParam = "host[19]"





[Config Wireless]
description = Delirium time!
**.networkConfigurator.typename = "NextHopNetworkConfigurator"
#**.networkConfigurator.typename = "Ipv4NetworkConfigurator"
#Add some fancy effects to our wireless network
*.host[*].wlan[2].radio.displayCommunicationRange = true
*.visualizer.sceneVisualizer.descriptionFigure = "title"
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.physicalLinkVisualizer.displayLinks = true
#*.visualizer.physicalLinkVisualizer.packetFilter = "CustomData"

#Some communication range
*.host[*].wlan[0].radio.transmitter.communicationRange = 200m
*.host[*].wlan[0].radio.displayCommunicationRange = true


#General mobility
**.host[*].mobility.initialZ = 0m 

**.host[0].mobility.initialX = 100m 
**.host[0].mobility.initialY = 100m 

**.host[1].mobility.initialX = 100m 
**.host[1].mobility.initialY = 250m 

**.host[2].mobility.initialX = 100m 
**.host[2].mobility.initialY = 400m 

**.host[3].mobility.initialX = 100m 
**.host[3].mobility.initialY = 550m 

**.host[4].mobility.initialX = 150m 
**.host[4].mobility.initialY = 100m

**.host[5].mobility.initialX = 200m 
**.host[5].mobility.initialY = 100m

**.host[6].mobility.initialX = 250m 
**.host[6].mobility.initialY = 100m

**.host[7].mobility.initialX = 100m 
**.host[7].mobility.initialY = 250m

**.host[8].mobility.initialX = 150m 
**.host[8].mobility.initialY = 250m

**.host[9].mobility.initialX = 200m 
**.host[9].mobility.initialY = 250m

**.host[10].mobility.initialX = 100m 
**.host[10].mobility.initialY = 400m

**.host[11].mobility.initialX = 150m 
**.host[11].mobility.initialY = 400m

**.host[12].mobility.initialX = 200m 
**.host[12].mobility.initialY = 400m

**.host[13].mobility.initialX = 100m 
**.host[13].mobility.initialY = 550m

**.host[14].mobility.initialX = 150m 
**.host[14].mobility.initialY = 550m

**.host[15].mobility.initialX = 200m 
**.host[15].mobility.initialY = 550m

**.host[16].mobility.initialX = 250m 
**.host[16].mobility.initialY = 100m

**.host[17].mobility.initialX = 250m 
**.host[17].mobility.initialY = 250m

**.host[18].mobility.initialX = 250m 
**.host[18].mobility.initialY = 400m

**.host[19].mobility.initialX = 250m 
**.host[19].mobility.initialY = 550m

**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m


[Config Static]
description = Static mobility
extends = Wireless

#Impostazioni di mobilita'
**.host[*].mobility.typename = "StationaryMobility"
**.host[*].mobility.initFromDisplayString = false


[Config Mobility]
description = Dinamic mobility
extends = Wireless
# mobility -->Solo Forwarding
**.host*.mobility.typename = "MassMobility"
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.host*.mobility.angleDelta = normal(0deg, 30deg)
**.host*.mobility.speed = truncnormal(20mps, 8mps)
**.host*.mobility.updateInterval = 100ms





